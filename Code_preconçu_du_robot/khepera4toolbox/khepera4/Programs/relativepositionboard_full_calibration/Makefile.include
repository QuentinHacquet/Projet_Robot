#
# (c) 2006-2008 EPFL, Lausanne, Switzerland
# Thomas Lochmatter
#

# Static target, used when compiling with "make static"
STATICTARGET	:= $(strip $(TARGET))-static

################## Toolchain Selection ##################
# Activate one of the toolchains below by commenting out the corresponding lines.
# Note that if you change the toolchain, you need to recompile all modules before recompiling all programs. The k3-make-all script will help you doing this.

# Toolchain (compiler, linker, ...) if you are using kernel 2.4 (korebot-tools-0.1.2)
#CC			:= arm-linux-gcc

# Toolchain (compiler, linker, ...) if you are using kernel 2.6 (korebot-oetools-1.0)
CC			:= arm-angstrom-linux-gnueabi-gcc

#########################################################

# Preparing files and flags
CMDLINE_SRC     := $(wildcard *.ggo)
CMDLINE         := $(CMDLINE_SRC:.ggo=.c)
CMDLINE_HEADER  := $(CMDLINE_SRC:.ggo=.h)
CMDLINE_OBJ     := $(CMDLINE_SRC:.ggo=.o)

SRCS		:= $(wildcard *.c)
SRCS    := $(filter-out $(CMDLINE), $(SRCS))
OBJS		:= $(SRCS:.c=.o)
MODS		:= $(MODS_ADD)
MODS		:= $(MODS) $(foreach MOD,$(MY_MODULES),$(MOD)/*.a)
MODS		:= $(MODS) $(foreach MOD,$(MODULES),$(K4_ROOT)/Modules/$(MOD)/$(MOD).a)
INCS		:= $(INCS_ADD)
INCS		:= $(INCS) $(foreach MOD,$(MY_MODULES),-I $(MOD))
INCS		:= $(INCS) $(foreach MOD,$(MODULES),-I $(K4_ROOT)/Modules/$(MOD))
LIBS		:= -lm $(LIBS_ADD)
CFLAGS 		:= $(CFLAGS_ADD)

$(TARGET): $(CMDLINE) $(CMDLINE_OBJ) $(OBJS) $(MODS)
	@echo "=== Building $@"
	$(CC) -o $@ $(CMDLINE_OBJ) $(OBJS) $(MODS) $(LIBS) $(INCS) $(CFLAGS)

$(STATICTARGET): $(CMDLINE) $(CMDLINE_OBJ) $(OBJS)
	@echo "=== Building $@ (statically)"
	$(CC) -o $@ $(CMDLINE_OBJ) $(OBJS) $(MODS) $(LIBS) -static $(INCS) $(CFLAGS)

.PHONY: all
all: $(TARGET)

.PHONY: static
static: $(STATICTARGET)

.PHONY: clean
clean:
	@echo "=== Cleaning"
	rm -f *.o .depend $(TARGET) $(STATICTARGET) *~
	rm -f $(CMDLINE_HEADER) $(CMDLINE)

.PHONY: depend
depend:
	@echo "=== Building dependencies"
	rm -f .depend
	touch .depend
	makedepend $(SYS_INCLUDES) $(INCS) -Y -f .depend $(SRCS)

%.o: %.c
	@echo "=== Compiling $@"
	$(CC) -Wall $(INCS) -c $(CFLAGS) $< -o $@

%.c: %.ggo
	@echo "=== Building $@"
	gengetopt --input="$<"

ifeq (.depend,$(wildcard .depend))
include .depend 
endif
